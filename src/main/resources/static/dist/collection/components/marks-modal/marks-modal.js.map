{"version":3,"file":"marks-modal.js","sourceRoot":"","sources":["../../../src/components/marks-modal/marks-modal.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAgB,KAAK,EAAE,MAAM,eAAe,CAAC;AAQ7F,MAAM,OAAO,UAAU;;QA4Bb,iBAAY,GAAG,GAAG,EAAE;YAC1B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACtB,CAAC,CAAC;QAEM,iBAAY,GAAG,GAAG,EAAE;YAC1B,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YACnB,KAAK,CAAC,SAAS,CAAC,CAAC;YACjB,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAA;QAC3C,CAAC,CAAC;;yBA7BkB,OAAO;;;;;;IAO3B,gBAAgB,CAAC,OAAO;QACtB,IAAG,OAAO,OAAO,KAAK,QAAQ,EAAE;YAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SACrC;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;SACzB;IACH,CAAC;IAID,iBAAiB;QACf,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACtC,CAAC;IAYD,MAAM;QACJ,OAAO,CACL,WAAK,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC,eAAe;YAChE,WAAK,KAAK,EAAC,eAAe,EAAC,OAAO,EAAE,IAAI,CAAC,YAAY,GAAG;YACxD,WAAK,KAAK,EAAC,OAAO;gBAChB,WAAK,KAAK,EAAC,QAAQ;oBACjB,cAAK,IAAI,CAAC,MAAM,CAAM;oBACtB,WAAK,KAAK,EAAC,OAAO,EAAC,OAAO,EAAE,IAAI,CAAC,YAAY;wBAC3C,WAAK,GAAG,EAAE,YAAY,CAAC,YAAY,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,GAAG,EAAC,YAAY,GAAG,CACrE,CACF;gBACN,WAAK,KAAK,EAAC,MAAM;oBACf,eAAQ,CACJ;gBACN,WAAK,KAAK,EAAC,QAAQ,IAChB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC,CACpC,oBACE,OAAO,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,EAC5D,IAAI,EAAE,MAAM,CAAC,IAAI,EACjB,UAAU,EAAE,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,UAAU,GAAI,CACjD,CAAC,CACE,CACF,CACF,CACP,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAEF","sourcesContent":["import { Component, h, Prop, getAssetPath, State, EventEmitter, Event } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'marks-modal',\r\n  styleUrl: 'marks-modal.css',\r\n  shadow: true,\r\n  assetsDirs: ['assets'],\r\n})\r\nexport class MarksModal {\r\n\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true,\r\n  })\r\n  @Prop() isopen: boolean;\r\n  @Prop() closeIcon = 'x.svg';\r\n  @Prop() header: string;\r\n  @Prop() appearance: string;\r\n  @Prop() buttons: string;\r\n\r\n  @State() _buttons: Array<any>;\r\n\r\n  arrayDataWatcher(buttons) {\r\n    if(typeof buttons === 'string') {\r\n      this._buttons = JSON.parse(buttons);\r\n    } else {\r\n      this._buttons = buttons;\r\n    }\r\n  }\r\n\r\n  @Event() private action: EventEmitter;\r\n\r\n  componentWillLoad() {\r\n    this.arrayDataWatcher(this.buttons);\r\n  }\r\n\r\n  private handleCancel = () => {\r\n    this.isopen = false;\r\n  };\r\n\r\n  private handleAction = () => {\r\n    this.action.emit();\r\n    alert('Request');\r\n    console.log('press from marks-modal.tsx')\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div class={this.isopen ? 'modal-wrapper isopen' : 'modal-wrapper'}>\r\n        <div class=\"modal-overlay\" onClick={this.handleCancel}/>\r\n        <div class=\"modal\">\r\n          <div class=\"header\">\r\n            <h6>{this.header}</h6>\r\n            <div class=\"close\" onClick={this.handleCancel}>\r\n              <img src={getAssetPath(`./assets/${this.closeIcon}`)} alt=\"close icon\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"body\">\r\n            <slot />\r\n          </div>\r\n          <div class=\"footer\">\r\n            {this._buttons.map((button, index) => (\r\n              <marks-button \r\n                onClick={index === 0 ? this.handleAction : this.handleCancel} \r\n                text={button.text} \r\n                appearance={index === 0 && this.appearance} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n"]}