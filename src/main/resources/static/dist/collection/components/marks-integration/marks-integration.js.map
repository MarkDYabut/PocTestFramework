{"version":3,"file":"marks-integration.js","sourceRoot":"","sources":["../../../src/components/marks-integration/marks-integration.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, h, State } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'marks-integration',\r\n  styleUrl: 'marks-integration.css',\r\n  shadow: true,\r\n})\r\nexport class MarksIntegration {\r\n\r\n  // http://localhost:8080/Rest/driver/new\r\n  @State() isLoading: boolean = false;\r\n  @State() data: any;\r\n  @State() drivers: string[] = [];\r\n\r\n  async fetchData(endpoint: string) {\r\n    const url = \"http://localhost:8080/Rest\";\r\n    const uri = url + endpoint;\r\n    this.isLoading = true;\r\n    console.log('loading', this.isLoading)\r\n    fetch(uri, {\r\n      method: 'GET',\r\n      // mode: 'no-cors', this breaks responses, handle cors on server side\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(res => {\r\n        console.log(res);\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        this.data = data;\r\n        console.log(data);\r\n      })\r\n      .catch(error => console.log('Error:', error))\r\n      .finally(() => {\r\n        this.isLoading = false;\r\n        console.log('loading', this.isLoading)\r\n      })\r\n  }\r\n\r\n  private handleNewDriver = () => {\r\n    this.fetchData(\"/driver/new\");\r\n    this.drivers = this.data.allDrivers;\r\n  };\r\n\r\n  private handleGetDrivers = () => {\r\n    this.fetchData(\"/driver/viewDrivers\");\r\n    this.drivers = this.data.allDrivers;\r\n  };\r\n\r\n  private handleDeleteDrivers = () => {\r\n    this.fetchData(\"/driver/destroyAll\");\r\n    this.drivers = this.data.allDrivers;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <h2>My first integration</h2>\r\n        Loading? {this.isLoading ? \"yes\" : \"no\"}\r\n        {this.isLoading ?\r\n          <marks-button text=\"Requesting...\" color=\"secondary\" loader={true}></marks-button>\r\n          :\r\n          <marks-button\r\n            onClick={this.handleNewDriver}\r\n            text=\"Request new driver\"\r\n            appearance=\r\n            \"primary\" />\r\n        }\r\n        {this.data ? <p>Created: {this.data.createdDriver}</p> : <p>Request new driver now!</p>}\r\n        Loading? {this.isLoading ? \"yes\" : \"no\"}\r\n        {this.isLoading ?\r\n          <marks-button text=\"Requesting...\" color=\"secondary\" loader={true}></marks-button>\r\n          :\r\n          <marks-button\r\n            onClick={this.handleGetDrivers}\r\n            text=\"Request all drivers\"\r\n            appearance=\r\n            \"warning\" />\r\n        }\r\n        <p>All Drivers:</p>\r\n        <ol>\r\n          {this.drivers.map((driver) => <li>{driver}</li>)}\r\n        </ol>\r\n        Loading? {this.isLoading ? \"yes\" : \"no\"}\r\n        {this.isLoading ?\r\n          <marks-button text=\"Requesting...\" color=\"secondary\" loader={true}></marks-button>\r\n          :\r\n          <marks-button\r\n            onClick={this.handleDeleteDrivers}\r\n            text=\"Delete all drivers\"\r\n            appearance=\r\n            \"danger\" />\r\n        }\r\n        <slot></slot>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n}\r\n"]}